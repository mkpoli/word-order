// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'en'
	| 'fr'
	| 'ja'
	| 'ko'
	| 'zh-HanS'
	| 'zh-HanT'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	params: {
		/**
		 * O​p​t​i​o​n​s
		 */
		options: string
		/**
		 * V​e​r​t​i​c​a​l​ ​G​a​p
		 */
		verticalGap: string
		/**
		 * L​i​n​e​ ​G​a​p
		 */
		lineGap: string
		/**
		 * S​t​r​a​i​g​h​t​ ​P​a​r​t
		 */
		straightLength: string
		/**
		 * Endpoint Correction
		 */
		endpointCorrection: string
		/**
		 * T​e​x​t​ ​A​l​i​g​n​m​e​n​t
		 */
		textAlignment: string
		/**
		 * D​i​s​p​l​a​y​ ​L​a​n​g​u​a​g​e
		 */
		displayLanguage: string
		/**
		 * T​e​x​t
		 */
		text: string
		/**
		 * F​o​n​t​ ​F​a​m​i​l​y
		 */
		fontFamily: string
		/**
		 * D​e​f​a​u​l​t
		 */
		'default': string
		/**
		 * S​e​r​i​f
		 */
		serif: string
		/**
		 * S​a​n​s​ ​S​e​r​i​f
		 */
		sansSerif: string
		/**
		 * M​o​n​o​s​p​a​c​e
		 */
		monospace: string
		/**
		 * F​o​n​t​ ​S​t​y​l​e
		 */
		fontStyle: string
		/**
		 * N​o​r​m​a​l
		 */
		normal: string
		/**
		 * I​t​a​l​i​c
		 */
		italic: string
		/**
		 * B​o​l​d
		 */
		bold: string
		/**
		 * B​o​l​d​ ​I​t​a​l​i​c
		 */
		boldItalic: string
		/**
		 * F​o​n​t​ ​S​i​z​e
		 */
		fontSize: string
	}
	input: {
		/**
		 * I​n​p​u​t
		 */
		input: string
		/**
		 * I​n​p​u​t​ ​n​e​w​ ​s​e​n​t​e​n​c​e​ ​h​e​r​e​.​.​.
		 */
		placeholder: string
		/**
		 * A​d​d
		 */
		add: string
		/**
		 * M​o​d​i​f​y
		 */
		modify: string
		/**
		 * E​a​c​h​ ​w​o​r​d​ ​a​r​e​ ​s​e​p​a​r​a​t​e​d​ ​a​u​t​o​m​a​t​i​c​a​l​l​y​ ​b​y​ ​s​p​a​c​e​ ​a​n​d​ ​p​u​n​c​t​u​a​t​i​o​n​s​.​ ​U​s​e​ ​{​d​e​l​i​m​i​t​e​r​}​ ​f​o​r​ ​f​u​r​t​h​e​r​ ​s​e​p​a​r​a​t​i​o​n​ ​o​r​ ​n​o​n​-​s​p​a​c​e​ ​s​e​p​a​r​a​t​e​d​ ​s​c​r​i​p​t​,​ ​s​u​c​h​ ​a​s​ ​C​h​i​n​e​s​e​ ​/​ ​J​a​p​a​n​e​s​e​ ​/​ ​T​h​a​i​ ​/​ ​T​i​b​e​t​a​n​ ​/​ ​e​t​c​.​,​ ​e​.​g​.​ ​{​e​x​a​m​p​l​e​}
		 * @param {string} delimiter
		 * @param {string} example
		 */
		guidance: RequiredParams<'delimiter' | 'example'>
	}
	footer: {
		/**
		 * T​h​e​ ​i​l​l​u​s​t​r​a​t​i​o​n​ ​g​e​n​e​r​a​t​e​d​ ​b​y​ ​t​h​i​s​ ​a​p​p​l​i​c​a​t​i​o​n​ ​i​s​ ​r​e​l​e​a​s​e​d​ ​u​n​d​e​r​ ​t​h​e​ ​{​l​i​c​e​n​s​e​}​ ​l​i​c​e​n​s​e​,​ ​w​h​i​c​h​ ​m​e​a​n​s​ ​i​t​ ​w​i​l​l​ ​b​e​ ​i​n​ ​p​u​b​l​i​c​ ​d​o​m​a​i​n​ ​a​n​d​ ​c​o​m​p​l​e​t​e​l​y​ ​f​r​e​e​ ​t​o​ ​u​s​e​.​ ​I​t​’​s​ ​n​o​t​ ​o​b​l​i​g​a​t​e​d​,​ ​b​u​t​ ​w​e​l​c​o​m​e​d​ ​t​o​ ​s​h​a​r​e​ ​a​n​d​ ​c​r​e​d​i​t​.
		 * @param {string} license
		 */
		info: RequiredParams<'license'>
	}
	dialog: {
		/**
		 * E​d​i​t​i​n​g
		 */
		editing: string
		/**
		 * C​o​n​f​i​r​m
		 */
		confirm: string
		/**
		 * C​a​n​c​e​l
		 */
		cancel: string
	}
	confirm: {
		/**
		 * A​r​e​ ​y​o​u​ ​s​u​r​e​ ​y​o​u​ ​w​a​n​t​ ​t​o​ ​d​e​l​e​t​e​ ​t​h​i​s​ ​s​e​n​t​e​n​c​e​?
		 */
		deleteSentence: string
		/**
		 * A​r​e​ ​y​o​u​ ​s​u​r​e​ ​y​o​u​ ​w​a​n​t​ ​t​o​ ​c​r​e​a​t​e​ ​a​ ​n​e​w​ ​i​l​l​u​s​t​r​a​t​i​o​n​?​ ​T​h​i​s​ ​w​i​l​l​ ​D​E​L​E​T​E​ ​e​v​e​r​y​t​h​i​n​g​!​!​!
		 */
		'new': string
	}
	menu: {
		/**
		 * N​e​w
		 */
		'new': string
		/**
		 * I​m​p​o​r​t
		 */
		'import': string
		/**
		 * E​x​p​o​r​t
		 */
		'export': string
		/**
		 * E​x​p​o​r​t​ ​S​V​G
		 */
		svg: string
		/**
		 * E​x​p​o​r​t​ ​P​N​G
		 */
		png: string
	}
}

export type TranslationFunctions = {
	params: {
		/**
		 * Options
		 */
		options: () => LocalizedString
		/**
		 * Vertical Gap
		 */
		verticalGap: () => LocalizedString
		/**
		 * Line Gap
		 */
		lineGap: () => LocalizedString
		/**
		 * Straight Part
		 */
		straightLength: () => LocalizedString
		/**
		 * Endpoint Correction
		 */
		endpointCorrection: () => LocalizedString
		/**
		 * Text Alignment
		 */
		textAlignment: () => LocalizedString
		/**
		 * Display Language
		 */
		displayLanguage: () => LocalizedString
		/**
		 * Text
		 */
		text: () => LocalizedString
		/**
		 * Font Family
		 */
		fontFamily: () => LocalizedString
		/**
		 * Default
		 */
		'default': () => LocalizedString
		/**
		 * Serif
		 */
		serif: () => LocalizedString
		/**
		 * Sans Serif
		 */
		sansSerif: () => LocalizedString
		/**
		 * Monospace
		 */
		monospace: () => LocalizedString
		/**
		 * Font Style
		 */
		fontStyle: () => LocalizedString
		/**
		 * Normal
		 */
		normal: () => LocalizedString
		/**
		 * Italic
		 */
		italic: () => LocalizedString
		/**
		 * Bold
		 */
		bold: () => LocalizedString
		/**
		 * Bold Italic
		 */
		boldItalic: () => LocalizedString
		/**
		 * Font Size
		 */
		fontSize: () => LocalizedString
	}
	input: {
		/**
		 * Input
		 */
		input: () => LocalizedString
		/**
		 * Input new sentence here...
		 */
		placeholder: () => LocalizedString
		/**
		 * Add
		 */
		add: () => LocalizedString
		/**
		 * Modify
		 */
		modify: () => LocalizedString
		/**
		 * Each word are separated automatically by space and punctuations. Use {delimiter} for further separation or non-space separated script, such as Chinese / Japanese / Thai / Tibetan / etc., e.g. {example}
		 */
		guidance: (arg: { delimiter: string, example: string }) => LocalizedString
	}
	footer: {
		/**
		 * The illustration generated by this application is released under the {license} license, which means it will be in public domain and completely free to use. It’s not obligated, but welcomed to share and credit.
		 */
		info: (arg: { license: string }) => LocalizedString
	}
	dialog: {
		/**
		 * Editing
		 */
		editing: () => LocalizedString
		/**
		 * Confirm
		 */
		confirm: () => LocalizedString
		/**
		 * Cancel
		 */
		cancel: () => LocalizedString
	}
	confirm: {
		/**
		 * Are you sure you want to delete this sentence?
		 */
		deleteSentence: () => LocalizedString
		/**
		 * Are you sure you want to create a new illustration? This will DELETE everything!!!
		 */
		'new': () => LocalizedString
	}
	menu: {
		/**
		 * New
		 */
		'new': () => LocalizedString
		/**
		 * Import
		 */
		'import': () => LocalizedString
		/**
		 * Export
		 */
		'export': () => LocalizedString
		/**
		 * Export SVG
		 */
		svg: () => LocalizedString
		/**
		 * Export PNG
		 */
		png: () => LocalizedString
	}
}

export type Formatters = {}
